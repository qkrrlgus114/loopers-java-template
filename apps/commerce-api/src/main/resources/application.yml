server:
  shutdown: graceful
  tomcat:
    threads:
      max: 200 # 최대 워커 스레드 수 (default : 200)
      min-spare: 10 # 최소 유지 스레드 수 (default : 10)
    connection-timeout: 1m # 연결 타임아웃 (ms) (default : 60000ms = 1m)
    max-connections: 8192 # 최대 동시 연결 수 (default : 8192)
    accept-count: 100 # 대기 큐 크기 (default : 100)
    keep-alive-timeout: 60s # 60s
  max-http-request-header-size: 8KB

spring:
  main:
    web-application-type: servlet
  application:
    name: commerce-api
  profiles:
    active: local
  config:
    import:
      - jpa.yml
      - redis.yml
      - logging.yml
      - monitoring.yml
      - kafka.yml
  kafka:
    topic:
      user-signals:
        version: 1.0.0
        topic: user-signals
      payment:
        version: 1.0.0
        topic: payment

resilience4j:
  retry:
    instances:
      pg-api:
        maxAttempts: 3           # 총 시도 횟수 (원호출 + 재시도 포함)
        waitDuration: 300ms
        retryExceptions:
          - java.net.ConnectException # 연결 실패
          - java.net.SocketTimeoutException # 소켓 타임아웃
          - org.springframework.web.client.HttpServerErrorException   # 5xx
          - org.springframework.web.client.ResourceAccessException    # 타임아웃/커넥션
        ignoreExceptions:
          - org.springframework.web.client.HttpClientErrorException   # 4xx는 보통 재시도 안함
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2.0
    retry-aspect-order: 0
  circuitbreaker:
    configs:
      default:
        sliding-window-type: count_based # 슬라이딩 윈도우 타입(횟수 기반)
        sliding-window-size: 100 # 슬라이딩 윈도우 크기
        failure-rate-threshold: 50 # 실패율 임계값(%)
        minimum-number-of-calls: 20 # 통계 반영 최소 호출 수
        slow-call-rate-threshold: 20 # 느린 호출 비율 임계값(%)
        slow-call-duration-threshold: 1500
        wait-duration-in-open-state: 1000 # 오픈 상태에서 대기 시간(OPEN -> HALF_OPEN)
        permitted-number-of-calls-in-half-open-state: 1 # HALF_OPEN 상태에서 허용되는 호출 수
        event-consumer-buffer-size: 1
        register-health-indicator: true
        recordExceptions:
          - java.lang.Throwable
    circuit-breaker-aspect-order: 1
    instances:
      pg-api:
        base-config: default

springdoc:
  use-fqn: true
  swagger-ui:
    path: /swagger-ui.html

kafka:
  topics:
    catalog-events: catalog-events
    order-events: order-events

---
spring:
  config:
    activate:
      on-profile: local, test

---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: qa

---
spring:
  config:
    activate:
      on-profile: prd

springdoc:
  api-docs:
    enabled: false